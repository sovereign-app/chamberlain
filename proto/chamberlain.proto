syntax = "proto3";

package chamberlain;

service Chamberlain {
    rpc GenerateAuthToken(GenerateAuthTokenRequest) returns (GenerateAuthTokenResponse) {}
    rpc GetInfo(GetInfoRequest) returns (GetInfoResponse) {}
    rpc AnnounceNode(AnnounceNodeRequest) returns (AnnounceNodeResponse) {}
    rpc ConnectPeer(ConnectPeerRequest) returns (ConnectPeerResponse) {}
    rpc OpenChannel(OpenChannelRequest) returns (OpenChannelResponse) {}
    rpc FundChannel(FundChannelRequest) returns (FundChannelResponse) {}
    rpc ReissueQuote(ReissueQuoteRequest) returns (ReissueQuoteResponse) {}
    rpc ClaimChannel(ClaimChannelRequest) returns (ClaimChannelResponse) {}
    rpc CloseChannel(CloseChannelRequest) returns (CloseChannelResponse) {}
    rpc SweepSpendableBalance(SweepSpendableBalanceRequest) returns (SweepSpendableBalanceResponse) {}
    rpc ReopenChannel(ReopenChannelRequest) returns (ReopenChannelResponse) {}
}

message GenerateAuthTokenRequest {
    bytes message = 1;
}

message GenerateAuthTokenResponse {
    bytes message = 1;
}

message GetInfoRequest {
}

message GetInfoResponse {
    string name = 1;
    string description = 2;
    string node_id = 3;
    map<string, uint64> channel_balances = 4;
    map<string, string> peers = 5;
    uint64 spendable_balance = 6;
    uint64 inbound_liquidity = 7;
    uint32 network_nodes = 8;
    uint32 network_channels = 9;
    optional string public_ip = 10;
    uint64 claimable_balance = 11;
    optional uint32 next_claimable_height = 12;
    uint64 total_issued = 13;
    uint64 total_redeemed = 14;
}

message AnnounceNodeRequest {
    string ip_address = 1;
}

message AnnounceNodeResponse {
}

message ConnectPeerRequest {
  string node_id = 1;
  string addr = 2;
}

message ConnectPeerResponse {
}

message OpenChannelRequest {
    string node_id = 1;
    uint64 amount = 2;
}

message OpenChannelResponse {
    string channel_id = 1;
    string address = 2;
    string quote_id = 3;
}

message FundChannelRequest {
    string channel_id = 1;
    bytes tx = 2;
}

message FundChannelResponse {
    string channel_id = 1;
}

message ReissueQuoteRequest {
    string channel_id = 1;
}

message ReissueQuoteResponse {
    string quote_id = 1;
}

message ClaimChannelRequest {
    string channel_id = 1;
    string quote_id = 2;
}

message ClaimChannelResponse {
    string token = 1;
}

message CloseChannelRequest {
    string channel_id = 1;
    string address = 2;
    string token = 3;
}

message CloseChannelResponse {
}

message SweepSpendableBalanceRequest {
    string address = 1;
    optional string token = 2;
    bool force = 3;
}

message SweepSpendableBalanceResponse {
    string txid = 1;
}

message ReopenChannelRequest {
    string node_id = 1;
}

message ReopenChannelResponse {
    string channel_id = 1;
    string address = 2;
    uint64 amount = 3;
    string txid = 4;
}